# Generated by Django 2.2 on 2020-12-29 19:04

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=50)),
                ('main_image', models.ImageField(blank=True, default='default.jpg', null=True, upload_to='')),
                ('plan', models.CharField(choices=[('Not subscribed', 'Not subscribed'), ('Basic', 'basic'), ('standard', 'standard'), ('gold', 'gold'), ('diamond', 'diamond')], default='Not subscribed', max_length=20)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=99999999, null=True, verbose_name='Balance')),
                ('date_joind', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('trans', models.URLField(max_length=250, verbose_name='Transactions')),
                ('subscribed', models.BooleanField(default=False, verbose_name='Subscribed')),
                ('is_trader', models.BooleanField(default=False, verbose_name='Trader')),
                ('is_invester', models.BooleanField(default=False, verbose_name='Invester')),
                ('api_key', models.CharField(blank=True, max_length=255)),
                ('api_secret', models.CharField(blank=True, max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Transactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('withdrawll', 'withdrawll'), ('deposit', 'deposit')], max_length=20)),
                ('transaction_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=9999999)),
                ('transaction_date', models.DateTimeField(auto_now_add=True, verbose_name='Transaction Date')),
                ('transaction_complete', models.BooleanField(default=False)),
                ('acc_balance', models.DecimalField(blank=True, decimal_places=2, max_digits=99999999, null=True, verbose_name='Account balance after that transaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Trades',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('postion', models.CharField(choices=[('Long', 'Long'), ('Short', 'Short')], max_length=50)),
                ('lot_size', models.DecimalField(blank=True, decimal_places=10, max_digits=10, verbose_name='Lot size')),
                ('trade_price', models.DecimalField(blank=True, decimal_places=15, max_digits=100, verbose_name='Trade Price')),
                ('symbol', models.CharField(max_length=22)),
                ('trade_date', models.DateTimeField(auto_now_add=True, verbose_name='Date')),
                ('trade_status', models.CharField(choices=[('Running', 'Running'), ('Closed', 'Closed')], max_length=25)),
                ('profit', models.DecimalField(blank=True, decimal_places=2, max_digits=1000000, verbose_name='Profit')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
